library(ImmuneSpaceR)
con <- CreateConnection("SDY269")
con
library(Rlabkey)
ds <- labkey.selectRows(lub, lup, "study", "DataSets")
ds
ds <- labkey.selectRows(lub, lup, "study", "DataSets", colNameOpt = "rname")
ds
?makeFilter
debug(con$.getAvailableDataSets)
con$.getAvailableDataSets()
available_datasets
con$.getAvailableDataSets()
dataset_filter <- makeFilter(c("showbydefault", "EQUAL", TRUE))
available_datasets<<-data.table(labkey.selectRows(baseUrl = config$labkey.url.base,config$labkey.url.path,schemaName = "study",queryName = "DataSets", colFilter = dataset_filter))[,list(Label,Name,Description,`Key Property Name`)]
con
library(ImmuneSpaceR)
con
con <- CreateConnection("SDY269")
con
con <- CreateConnection("SDY162")
con
curlOptions(ssl.cipher.list="RC4")
library(RCurl)
curlOptions(ssl.cipher.list="RC4")
co <- curlOptions(ssl.cipher.list="RC4")
Rlabkey:::.lksession
ls(Rlabkey:::.lksession)
Rlabkey:::.lksession$curlOptions
Rlabkey:::.lksession$curlOptions$ssl.cipher.list <- NULL
Rlabkey:::.lksession$curlOptions$ssl.cipher.list
rm(Rlabkey:::.lksession$curlOptions$ssl.cipher.list)
Rlabkey:::.lksession$curlOptions$ssl.cipher.list
Rlabkey:::.lksession$curlOptions$ssl.cipher.list = NULL
ls()
nenv <- environment()
nenv
nenv$xxx <- 12
nenv
ls()
curlOptions()
opts
?curlOptions
opts
opts <- curlOptions(sss.cipher.list = ALL)
opts <- curlOptions(sss.cipher.list = "ALL")
opts <- curlOptions(header = T)
opts
curlOptions(ssl.cipher.list = "ALL", .opts = opts)
opts <- curlOptions(ssl.cipher.list = "ALL", .opts = opts)
